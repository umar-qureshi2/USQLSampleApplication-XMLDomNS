 /*
Note:
Please run the scripts in the given order (for example running 1-1 first and then run 1-2, since there are some data dependencies).
There are two ways to run this sample.
1. If you want to run this sample in the Azure Data Lake service, please you have the sample data loaded to your Azure Data Lake Storage Account.
You can load the samples by going to https://portal.azure.com, go to your ADL Analytics Account, click the "Sample Jobs" in the "Settings" button. 
Then the portal will load the samples to your ADL Store account automatically.
2. Also, you can run the scripts locally (Pressing Ctrl + F5) to trigger local run. The data is bundled with this sample project.
*/

// Load data from ADL file into tables. 
DECLARE @ADL_INPUTDIR string = "/Samples/Data/AmbulanceData/";
DECLARE @ADL_DRIVERS string = @ADL_INPUTDIR + "Drivers.txt"; // TAB Separated Unicode file
DECLARE @ADL_TRIPS string = @ADL_INPUTDIR + "DriverShiftTrips.csv"; // Excel CSV (ANSI)

@DriversTemp =
    EXTRACT driver_id int,
            name string,
            street string,
            city string,
            region string,
            zipcode string,
            country string,
            phone_numbers string // Map
    FROM @ADL_DRIVERS
    USING Extractors.Text(delimiter : '\t', quoting : false, encoding : Encoding.Unicode);

// Rowset expression names can be reused
@Drivers =
    SELECT driver_id,
           name,
           street,
           city,
           region == ""? "null" : region AS region,
           zipcode,
           country,
           phone_numbers == ""? null :
           new SQL.MAP<string, string>(from p in phone_numbers.Split(',') select new KeyValuePair<string, string>(p.Split(':') [0], p.Split(':') [1])) AS phone_numbers
    FROM @DriversTemp;

INSERT INTO Drivers
SELECT *
FROM @Drivers;

@Trips =
    EXTRACT date DateTime,
            driver_id int,
            vehicle_id int,
            trips string // Array
    FROM @ADL_TRIPS
    USING Extractors.Csv(quoting : true);

@Trips =
    SELECT date,
           driver_id,
           vehicle_id,
           trips == null? null : new SQL.ARRAY<int>(trips.Split(',').Select(x => Convert.ToInt32(x))) AS trip_ids
    FROM @Trips;

INSERT INTO Trips
SELECT *
FROM @Trips;

// Expressions can be reused in a script across database boundaries
USE DATABASE DriverDB;
USE SCHEMA [Driver Schema];

INSERT INTO Drivers
SELECT *
FROM @Drivers;
INSERT INTO Trips
SELECT *
FROM @Trips;


